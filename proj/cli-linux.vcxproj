<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|ARM">
      <Configuration>Debug</Configuration>
      <Platform>ARM</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|ARM">
      <Configuration>Release</Configuration>
      <Platform>ARM</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|ARM64">
      <Configuration>Debug</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|ARM64">
      <Configuration>Release</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x86">
      <Configuration>Debug</Configuration>
      <Platform>x86</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x86">
      <Configuration>Release</Configuration>
      <Platform>x86</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{7eb6584d-e69f-45cc-ad6f-74e788ec7090}</ProjectGuid>
    <Keyword>Linux</Keyword>
    <RootNamespace>cli_linux</RootNamespace>
    <MinimumVisualStudioVersion>15.0</MinimumVisualStudioVersion>
    <ApplicationType>Linux</ApplicationType>
    <ApplicationTypeRevision>1.0</ApplicationTypeRevision>
    <TargetLinuxPlatform>Generic</TargetLinuxPlatform>
    <LinuxProjectType>{D51BCBC9-82E9-4017-911E-C93873C4EA2B}</LinuxProjectType>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'" Label="Configuration">
    <UseDebugLibraries>true</UseDebugLibraries>
    <UseOfStl>libstdc++_static</UseOfStl>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'" Label="Configuration">
    <UseDebugLibraries>false</UseDebugLibraries>
    <UseOfStl>libstdc++_static</UseOfStl>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x86'" Label="Configuration">
    <UseDebugLibraries>true</UseDebugLibraries>
    <UseOfStl>libstdc++_static</UseOfStl>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x86'" Label="Configuration">
    <UseDebugLibraries>false</UseDebugLibraries>
    <UseOfStl>libstdc++_static</UseOfStl>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <UseDebugLibraries>true</UseDebugLibraries>
    <UseOfStl>libstdc++_static</UseOfStl>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <UseDebugLibraries>false</UseDebugLibraries>
    <UseOfStl>libstdc++_static</UseOfStl>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM64'" Label="Configuration">
    <UseDebugLibraries>false</UseDebugLibraries>
    <UseOfStl>libstdc++_static</UseOfStl>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM64'" Label="Configuration">
    <UseDebugLibraries>true</UseDebugLibraries>
    <UseOfStl>libstdc++_static</UseOfStl>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings" />
  <ImportGroup Label="Shared" />
  <ImportGroup Label="PropertySheets" />
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'">
    <TargetName>ijjs-cli</TargetName>
    <RemoteProjectDir>$(RemoteRootDir)/$(ProjectName)</RemoteProjectDir>
    <RemoteDeployDir>$(RemoteProjectDir)</RemoteDeployDir>
    <OutDir>../bin/linux</OutDir>
    <IntDir>$(ProjectDir)obj</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'">
    <TargetName>ijjs-cli</TargetName>
    <RemoteProjectDir>$(RemoteRootDir)/$(ProjectName)</RemoteProjectDir>
    <RemoteDeployDir>$(RemoteProjectDir)</RemoteDeployDir>
    <OutDir>../bin/linux</OutDir>
    <IntDir>$(ProjectDir)obj</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM64'">
    <TargetName>ijjs-cli</TargetName>
    <RemoteProjectDir>$(RemoteRootDir)/$(ProjectName)</RemoteProjectDir>
    <RemoteDeployDir>$(RemoteProjectDir)</RemoteDeployDir>
    <OutDir>../bin/linux</OutDir>
    <IntDir>$(ProjectDir)obj</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM64'">
    <TargetName>ijjs-cli</TargetName>
    <RemoteProjectDir>$(RemoteRootDir)/$(ProjectName)</RemoteProjectDir>
    <RemoteDeployDir>$(RemoteProjectDir)</RemoteDeployDir>
    <OutDir>../bin/linux</OutDir>
    <IntDir>$(ProjectDir)obj</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <TargetName>ijjs-cli</TargetName>
    <RemoteProjectDir>$(RemoteRootDir)/$(ProjectName)</RemoteProjectDir>
    <RemoteDeployDir>$(RemoteProjectDir)</RemoteDeployDir>
    <OutDir>../bin/linux</OutDir>
    <IntDir>$(ProjectDir)obj</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <TargetName>ijjs-cli</TargetName>
    <RemoteProjectDir>$(RemoteRootDir)/$(ProjectName)</RemoteProjectDir>
    <RemoteDeployDir>$(RemoteProjectDir)</RemoteDeployDir>
    <OutDir>../bin/linux</OutDir>
    <IntDir>$(ProjectDir)obj</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x86'">
    <TargetName>ijjs-cli</TargetName>
    <RemoteProjectDir>$(RemoteRootDir)/$(ProjectName)</RemoteProjectDir>
    <RemoteDeployDir>$(RemoteProjectDir)</RemoteDeployDir>
    <OutDir>../bin/linux</OutDir>
    <IntDir>$(ProjectDir)obj</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x86'">
    <TargetName>ijjs-cli</TargetName>
    <RemoteProjectDir>$(RemoteRootDir)/$(ProjectName)</RemoteProjectDir>
    <RemoteDeployDir>$(RemoteProjectDir)</RemoteDeployDir>
    <OutDir>../bin/linux</OutDir>
    <IntDir>$(ProjectDir)obj</IntDir>
  </PropertyGroup>
  <ItemGroup>
    <ClCompile Include="..\code\externals\jsmin\jsmin.c">
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|ARM64'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|ARM64'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|ARM'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|x86'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|x86'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="..\code\main.c" />
  </ItemGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'">
    <ClCompile>
      <AdditionalIncludeDirectories>/root/projects/libijjs-linux/code/externals/wasm;/root/projects/libijjs-linux/code/externals/quickjs;/root/projects/libijjs-linux/code/externals/curl;/root/projects/libijjs-linux/code/externals;/root/projects/libijjs-linux/code/externals/jemalloc/include;/root/projects/libijjs-linux/code/externals/uv/include;/root/projects/libijjs-linux/code/externals/uv/src;/root/projects/libijjs-linux/code;/root/projects/libijjs-linux/code/headers;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <CLanguageStandard>gnu11</CLanguageStandard>
      <AdditionalOptions>-Wno-unused-parameter -Wno-incompatible-pointer-types -Wno-pointer-sign -Wno-int-conversion -Wno-unused-const-variable -Wno-unused-function -Wno-unused-variable -Wno-deprecated-declarations -Wno-ignored-attributes -Wno-missing-braces -Wno-comment -Wno-unused-value -Wno-format -Wno-expansion-to-defined -Wno-sign-conversion -Wno-conversion -Wno-int-to-pointer-cast -Wno-misleading-indentation %(AdditionalOptions)</AdditionalOptions>
      <PreprocessorDefinitions>HAVE_CURL_CONFIG_H;_LARGEFILE_SOURCE;_GNU_SOURCE;</PreprocessorDefinitions>
    </ClCompile>
    <Link>
      <AdditionalLibraryDirectories>/root/projects/libijjs-linux/bin/linux;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <LibraryDependencies>ijjs</LibraryDependencies>
      <SharedLibrarySearchPath>'$$ORIGIN';%(SharedLibrarySearchPath)</SharedLibrarySearchPath>
      <AdditionalOptions> -Wl,-rpath='$ORIGIN' %(AdditionalOptions)</AdditionalOptions>
    </Link>
    <PostBuildEvent>
      <Command>copy $(TargetDir)ijjs-cli.out $(TargetDir)ijjs-cli
del $(TargetDir)ijjs-cli.out
copy $(TargetDir)redis.out $(TargetDir)redis
del $(TargetDir)redis.out
copy $(TargetDir)libijjs.so ..\install\packages\org.ifw.ijjs\data\libijjs.so
copy $(TargetDir)libsigar.so ..\install\packages\org.ifw.ijjs\data\libsigar.so
copy $(TargetDir)libpostgre.so ..\install\packages\org.ifw.ijjs\data\libpostgre.so
copy $(TargetDir)libredis.so ..\install\packages\org.ifw.ijjs\data\libredis.so
copy $(TargetDir)ijjs-cli ..\install\packages\org.ifw.ijjs\data\ijjs-cli
copy $(TargetDir)redis ..\install\packages\org.ifw.ijjs\data\redis
copy ..\lib.ijdom.d.ts ..\install\packages\org.ifw.ijjs\data\lib.ijdom.d.ts
copy ..\lib.ijjs.d.ts ..\install\packages\org.ifw.ijjs\data\lib.ijjs.d.ts
copy ..\modules\postgresql\libpostgre.d.ts ..\install\packages\org.ifw.ijjs\data\libpostgre.d.ts
copy ..\modules\sigar\libsigar.d.ts ..\install\packages\org.ifw.ijjs\data\libsigar.d.ts
copy ..\modules\redis\libredis.d.ts ..\install\packages\org.ifw.ijjs\data\libredis.d.ts
copy ..\modules\cron\cron.js ..\install\packages\org.ifw.ijjs\data\cron.js
copy ..\modules\cron\cron.d.ts ..\install\packages\org.ifw.ijjs\data\cron.d.ts</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'">
    <ClCompile>
      <AdditionalIncludeDirectories>/root/projects/libijjs-linux/code/externals/wasm;/root/projects/libijjs-linux/code/externals/quickjs;/root/projects/libijjs-linux/code/externals/curl;/root/projects/libijjs-linux/code/externals;/root/projects/libijjs-linux/code/externals/jemalloc/include;/root/projects/libijjs-linux/code/externals/uv/include;/root/projects/libijjs-linux/code/externals/uv/src;/root/projects/libijjs-linux/code;/root/projects/libijjs-linux/code/headers;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <CLanguageStandard>gnu11</CLanguageStandard>
      <AdditionalOptions>-Wno-unused-parameter -Wno-incompatible-pointer-types -Wno-pointer-sign -Wno-int-conversion -Wno-unused-const-variable -Wno-unused-function -Wno-unused-variable -Wno-deprecated-declarations -Wno-ignored-attributes -Wno-missing-braces -Wno-comment -Wno-unused-value -Wno-format -Wno-expansion-to-defined -Wno-sign-conversion -Wno-conversion -Wno-int-to-pointer-cast -Wno-misleading-indentation %(AdditionalOptions)</AdditionalOptions>
      <PreprocessorDefinitions>HAVE_CURL_CONFIG_H;_LARGEFILE_SOURCE;_GNU_SOURCE;NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
    <Link>
      <AdditionalLibraryDirectories>/root/projects/libijjs-linux/bin/linux;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <LibraryDependencies>ijjs</LibraryDependencies>
      <SharedLibrarySearchPath>'$$ORIGIN';%(SharedLibrarySearchPath)</SharedLibrarySearchPath>
      <AdditionalOptions> -Wl,-rpath='$ORIGIN' %(AdditionalOptions)</AdditionalOptions>
    </Link>
    <PostBuildEvent>
      <Command>copy $(TargetDir)ijjs-cli.out $(TargetDir)ijjs-cli
del $(TargetDir)ijjs-cli.out
copy $(TargetDir)redis.out $(TargetDir)redis
del $(TargetDir)redis.out
copy $(TargetDir)libijjs.so ..\install\packages\org.ifw.ijjs\data\libijjs.so
copy $(TargetDir)libsigar.so ..\install\packages\org.ifw.ijjs\data\libsigar.so
copy $(TargetDir)libpostgre.so ..\install\packages\org.ifw.ijjs\data\libpostgre.so
copy $(TargetDir)libredis.so ..\install\packages\org.ifw.ijjs\data\libredis.so
copy $(TargetDir)ijjs-cli ..\install\packages\org.ifw.ijjs\data\ijjs-cli
copy $(TargetDir)redis ..\install\packages\org.ifw.ijjs\data\redis
copy ..\lib.ijdom.d.ts ..\install\packages\org.ifw.ijjs\data\lib.ijdom.d.ts
copy ..\lib.ijjs.d.ts ..\install\packages\org.ifw.ijjs\data\lib.ijjs.d.ts
copy ..\modules\postgresql\libpostgre.d.ts ..\install\packages\org.ifw.ijjs\data\libpostgre.d.ts
copy ..\modules\sigar\libsigar.d.ts ..\install\packages\org.ifw.ijjs\data\libsigar.d.ts
copy ..\modules\redis\libredis.d.ts ..\install\packages\org.ifw.ijjs\data\libredis.d.ts
copy ..\modules\cron\cron.js ..\install\packages\org.ifw.ijjs\data\cron.js
copy ..\modules\cron\cron.d.ts ..\install\packages\org.ifw.ijjs\data\cron.d.ts</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM64'">
    <ClCompile>
      <AdditionalIncludeDirectories>/root/projects/libijjs-linux/code/externals/wasm;/root/projects/libijjs-linux/code/externals/quickjs;/root/projects/libijjs-linux/code/externals/curl;/root/projects/libijjs-linux/code/externals;/root/projects/libijjs-linux/code/externals/jemalloc/include;/root/projects/libijjs-linux/code/externals/uv/include;/root/projects/libijjs-linux/code/externals/uv/src;/root/projects/libijjs-linux/code;/root/projects/libijjs-linux/code/headers;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <CLanguageStandard>gnu11</CLanguageStandard>
      <AdditionalOptions>-Wno-unused-parameter -Wno-incompatible-pointer-types -Wno-pointer-sign -Wno-int-conversion -Wno-unused-const-variable -Wno-unused-function -Wno-unused-variable -Wno-deprecated-declarations -Wno-ignored-attributes -Wno-missing-braces -Wno-comment -Wno-unused-value -Wno-format -Wno-expansion-to-defined -Wno-sign-conversion -Wno-conversion -Wno-int-to-pointer-cast -Wno-misleading-indentation %(AdditionalOptions)</AdditionalOptions>
      <PreprocessorDefinitions>HAVE_CURL_CONFIG_H;_LARGEFILE_SOURCE;_GNU_SOURCE;</PreprocessorDefinitions>
    </ClCompile>
    <Link>
      <AdditionalLibraryDirectories>/root/projects/libijjs-linux/bin/linux;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <LibraryDependencies>ijjs</LibraryDependencies>
      <SharedLibrarySearchPath>'$$ORIGIN';%(SharedLibrarySearchPath)</SharedLibrarySearchPath>
      <AdditionalOptions> -Wl,-rpath='$ORIGIN' %(AdditionalOptions)</AdditionalOptions>
    </Link>
    <PostBuildEvent>
      <Command>copy $(TargetDir)ijjs-cli.out $(TargetDir)ijjs-cli
del $(TargetDir)ijjs-cli.out
copy $(TargetDir)redis.out $(TargetDir)redis
del $(TargetDir)redis.out
copy $(TargetDir)libijjs.so ..\install\packages\org.ifw.ijjs\data\libijjs.so
copy $(TargetDir)libsigar.so ..\install\packages\org.ifw.ijjs\data\libsigar.so
copy $(TargetDir)libpostgre.so ..\install\packages\org.ifw.ijjs\data\libpostgre.so
copy $(TargetDir)libredis.so ..\install\packages\org.ifw.ijjs\data\libredis.so
copy $(TargetDir)ijjs-cli ..\install\packages\org.ifw.ijjs\data\ijjs-cli
copy $(TargetDir)redis ..\install\packages\org.ifw.ijjs\data\redis
copy ..\lib.ijdom.d.ts ..\install\packages\org.ifw.ijjs\data\lib.ijdom.d.ts
copy ..\lib.ijjs.d.ts ..\install\packages\org.ifw.ijjs\data\lib.ijjs.d.ts
copy ..\modules\postgresql\libpostgre.d.ts ..\install\packages\org.ifw.ijjs\data\libpostgre.d.ts
copy ..\modules\sigar\libsigar.d.ts ..\install\packages\org.ifw.ijjs\data\libsigar.d.ts
copy ..\modules\redis\libredis.d.ts ..\install\packages\org.ifw.ijjs\data\libredis.d.ts
copy ..\modules\cron\cron.js ..\install\packages\org.ifw.ijjs\data\cron.js
copy ..\modules\cron\cron.d.ts ..\install\packages\org.ifw.ijjs\data\cron.d.ts</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM64'">
    <ClCompile>
      <AdditionalIncludeDirectories>/root/projects/libijjs-linux/code/externals/wasm;/root/projects/libijjs-linux/code/externals/quickjs;/root/projects/libijjs-linux/code/externals/curl;/root/projects/libijjs-linux/code/externals;/root/projects/libijjs-linux/code/externals/jemalloc/include;/root/projects/libijjs-linux/code/externals/uv/include;/root/projects/libijjs-linux/code/externals/uv/src;/root/projects/libijjs-linux/code;/root/projects/libijjs-linux/code/headers;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <CLanguageStandard>gnu11</CLanguageStandard>
      <AdditionalOptions>-Wno-unused-parameter -Wno-incompatible-pointer-types -Wno-pointer-sign -Wno-int-conversion -Wno-unused-const-variable -Wno-unused-function -Wno-unused-variable -Wno-deprecated-declarations -Wno-ignored-attributes -Wno-missing-braces -Wno-comment -Wno-unused-value -Wno-format -Wno-expansion-to-defined -Wno-sign-conversion -Wno-conversion -Wno-int-to-pointer-cast -Wno-misleading-indentation %(AdditionalOptions)</AdditionalOptions>
      <PreprocessorDefinitions>HAVE_CURL_CONFIG_H;_LARGEFILE_SOURCE;_GNU_SOURCE;NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
    <Link>
      <AdditionalLibraryDirectories>/root/projects/libijjs-linux/bin/linux;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <LibraryDependencies>ijjs</LibraryDependencies>
      <SharedLibrarySearchPath>'$$ORIGIN';%(SharedLibrarySearchPath)</SharedLibrarySearchPath>
      <AdditionalOptions> -Wl,-rpath='$ORIGIN' %(AdditionalOptions)</AdditionalOptions>
    </Link>
    <PostBuildEvent>
      <Command>copy $(TargetDir)ijjs-cli.out $(TargetDir)ijjs-cli
del $(TargetDir)ijjs-cli.out
copy $(TargetDir)redis.out $(TargetDir)redis
del $(TargetDir)redis.out
copy $(TargetDir)libijjs.so ..\install\packages\org.ifw.ijjs\data\libijjs.so
copy $(TargetDir)libsigar.so ..\install\packages\org.ifw.ijjs\data\libsigar.so
copy $(TargetDir)libpostgre.so ..\install\packages\org.ifw.ijjs\data\libpostgre.so
copy $(TargetDir)libredis.so ..\install\packages\org.ifw.ijjs\data\libredis.so
copy $(TargetDir)ijjs-cli ..\install\packages\org.ifw.ijjs\data\ijjs-cli
copy $(TargetDir)redis ..\install\packages\org.ifw.ijjs\data\redis
copy ..\lib.ijdom.d.ts ..\install\packages\org.ifw.ijjs\data\lib.ijdom.d.ts
copy ..\lib.ijjs.d.ts ..\install\packages\org.ifw.ijjs\data\lib.ijjs.d.ts
copy ..\modules\postgresql\libpostgre.d.ts ..\install\packages\org.ifw.ijjs\data\libpostgre.d.ts
copy ..\modules\sigar\libsigar.d.ts ..\install\packages\org.ifw.ijjs\data\libsigar.d.ts
copy ..\modules\redis\libredis.d.ts ..\install\packages\org.ifw.ijjs\data\libredis.d.ts
copy ..\modules\cron\cron.js ..\install\packages\org.ifw.ijjs\data\cron.js
copy ..\modules\cron\cron.d.ts ..\install\packages\org.ifw.ijjs\data\cron.d.ts</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>/root/projects/libijjs-linux/code/externals/wasm;/root/projects/libijjs-linux/code/externals/quickjs;/root/projects/libijjs-linux/code/externals/curl;/root/projects/libijjs-linux/code/externals;/root/projects/libijjs-linux/code/externals/jemalloc/include;/root/projects/libijjs-linux/code/externals/uv/include;/root/projects/libijjs-linux/code/externals/uv/src;/root/projects/libijjs-linux/code;/root/projects/libijjs-linux/code/headers;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <CLanguageStandard>gnu11</CLanguageStandard>
      <AdditionalOptions>-Wno-unused-parameter -Wno-incompatible-pointer-types -Wno-pointer-sign -Wno-int-conversion -Wno-unused-const-variable -Wno-unused-function -Wno-unused-variable -Wno-deprecated-declarations -Wno-ignored-attributes -Wno-missing-braces -Wno-comment -Wno-unused-value -Wno-format -Wno-expansion-to-defined -Wno-sign-conversion -Wno-conversion -Wno-int-to-pointer-cast -Wno-misleading-indentation %(AdditionalOptions)</AdditionalOptions>
      <PreprocessorDefinitions>HAVE_CURL_CONFIG_H;_LARGEFILE_SOURCE;_GNU_SOURCE</PreprocessorDefinitions>
    </ClCompile>
    <Link>
      <AdditionalLibraryDirectories>/root/projects/libijjs-linux/bin/linux;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <LibraryDependencies>ijjs</LibraryDependencies>
      <SharedLibrarySearchPath>'$$ORIGIN';%(SharedLibrarySearchPath)</SharedLibrarySearchPath>
      <AdditionalOptions> -Wl,-rpath='$ORIGIN' %(AdditionalOptions)</AdditionalOptions>
    </Link>
    <PostBuildEvent>
      <Command>copy $(TargetDir)ijjs-cli.out $(TargetDir)ijjs-cli
del $(TargetDir)ijjs-cli.out
copy $(TargetDir)redis.out $(TargetDir)redis
del $(TargetDir)redis.out
copy $(TargetDir)libijjs.so ..\install\packages\org.ifw.ijjs\data\libijjs.so
copy $(TargetDir)libsigar.so ..\install\packages\org.ifw.ijjs\data\libsigar.so
copy $(TargetDir)libpostgre.so ..\install\packages\org.ifw.ijjs\data\libpostgre.so
copy $(TargetDir)libredis.so ..\install\packages\org.ifw.ijjs\data\libredis.so
copy $(TargetDir)ijjs-cli ..\install\packages\org.ifw.ijjs\data\ijjs-cli
copy $(TargetDir)redis ..\install\packages\org.ifw.ijjs\data\redis
copy ..\lib.ijdom.d.ts ..\install\packages\org.ifw.ijjs\data\lib.ijdom.d.ts
copy ..\lib.ijjs.d.ts ..\install\packages\org.ifw.ijjs\data\lib.ijjs.d.ts
copy ..\modules\postgresql\libpostgre.d.ts ..\install\packages\org.ifw.ijjs\data\libpostgre.d.ts
copy ..\modules\sigar\libsigar.d.ts ..\install\packages\org.ifw.ijjs\data\libsigar.d.ts
copy ..\modules\redis\libredis.d.ts ..\install\packages\org.ifw.ijjs\data\libredis.d.ts
copy ..\modules\cron\cron.js ..\install\packages\org.ifw.ijjs\data\cron.js
copy ..\modules\cron\cron.d.ts ..\install\packages\org.ifw.ijjs\data\cron.d.ts</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>/root/projects/libijjs-linux/code/externals/wasm;/root/projects/libijjs-linux/code/externals/quickjs;/root/projects/libijjs-linux/code/externals/curl;/root/projects/libijjs-linux/code/externals;/root/projects/libijjs-linux/code/externals/jemalloc/include;/root/projects/libijjs-linux/code/externals/uv/include;/root/projects/libijjs-linux/code/externals/uv/src;/root/projects/libijjs-linux/code;/root/projects/libijjs-linux/code/headers;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <CLanguageStandard>gnu11</CLanguageStandard>
      <AdditionalOptions>-Wno-unused-parameter -Wno-incompatible-pointer-types -Wno-pointer-sign -Wno-int-conversion -Wno-unused-const-variable -Wno-unused-function -Wno-unused-variable -Wno-deprecated-declarations -Wno-ignored-attributes -Wno-missing-braces -Wno-comment -Wno-unused-value -Wno-format -Wno-expansion-to-defined -Wno-sign-conversion -Wno-conversion -Wno-int-to-pointer-cast -Wno-misleading-indentation %(AdditionalOptions)</AdditionalOptions>
      <PreprocessorDefinitions>HAVE_CURL_CONFIG_H;_LARGEFILE_SOURCE;_GNU_SOURCE;NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
    <Link>
      <AdditionalLibraryDirectories>/root/projects/libijjs-linux/bin/linux;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <LibraryDependencies>ijjs</LibraryDependencies>
      <SharedLibrarySearchPath>'$$ORIGIN';%(SharedLibrarySearchPath)</SharedLibrarySearchPath>
      <AdditionalOptions> -Wl,-rpath='$ORIGIN' %(AdditionalOptions)</AdditionalOptions>
    </Link>
    <PostBuildEvent>
      <Command>copy $(TargetDir)ijjs-cli.out $(TargetDir)ijjs-cli
del $(TargetDir)ijjs-cli.out
copy $(TargetDir)redis.out $(TargetDir)redis
del $(TargetDir)redis.out
copy $(TargetDir)libijjs.so ..\install\packages\org.ifw.ijjs\data\libijjs.so
copy $(TargetDir)libsigar.so ..\install\packages\org.ifw.ijjs\data\libsigar.so
copy $(TargetDir)libpostgre.so ..\install\packages\org.ifw.ijjs\data\libpostgre.so
copy $(TargetDir)libredis.so ..\install\packages\org.ifw.ijjs\data\libredis.so
copy $(TargetDir)ijjs-cli ..\install\packages\org.ifw.ijjs\data\ijjs-cli
copy $(TargetDir)redis ..\install\packages\org.ifw.ijjs\data\redis
copy ..\lib.ijdom.d.ts ..\install\packages\org.ifw.ijjs\data\lib.ijdom.d.ts
copy ..\lib.ijjs.d.ts ..\install\packages\org.ifw.ijjs\data\lib.ijjs.d.ts
copy ..\modules\postgresql\libpostgre.d.ts ..\install\packages\org.ifw.ijjs\data\libpostgre.d.ts
copy ..\modules\sigar\libsigar.d.ts ..\install\packages\org.ifw.ijjs\data\libsigar.d.ts
copy ..\modules\redis\libredis.d.ts ..\install\packages\org.ifw.ijjs\data\libredis.d.ts
copy ..\modules\cron\cron.js ..\install\packages\org.ifw.ijjs\data\cron.js
copy ..\modules\cron\cron.d.ts ..\install\packages\org.ifw.ijjs\data\cron.d.ts</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x86'">
    <ClCompile>
      <AdditionalIncludeDirectories>/root/projects/libijjs-linux/code/externals/wasm;/root/projects/libijjs-linux/code/externals/quickjs;/root/projects/libijjs-linux/code/externals/curl;/root/projects/libijjs-linux/code/externals;/root/projects/libijjs-linux/code/externals/jemalloc/include;/root/projects/libijjs-linux/code/externals/uv/include;/root/projects/libijjs-linux/code/externals/uv/src;/root/projects/libijjs-linux/code;/root/projects/libijjs-linux/code/headers;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <CLanguageStandard>gnu11</CLanguageStandard>
      <AdditionalOptions>-Wno-unused-parameter -Wno-incompatible-pointer-types -Wno-pointer-sign -Wno-int-conversion -Wno-unused-const-variable -Wno-unused-function -Wno-unused-variable -Wno-deprecated-declarations -Wno-ignored-attributes -Wno-missing-braces -Wno-comment -Wno-unused-value -Wno-format -Wno-expansion-to-defined -Wno-sign-conversion -Wno-conversion -Wno-int-to-pointer-cast -Wno-misleading-indentation %(AdditionalOptions)</AdditionalOptions>
      <PreprocessorDefinitions>HAVE_CURL_CONFIG_H;_LARGEFILE_SOURCE;_GNU_SOURCE;</PreprocessorDefinitions>
    </ClCompile>
    <Link>
      <AdditionalLibraryDirectories>/root/projects/libijjs-linux/bin/linux;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <LibraryDependencies>ijjs</LibraryDependencies>
      <SharedLibrarySearchPath>'$$ORIGIN';%(SharedLibrarySearchPath)</SharedLibrarySearchPath>
      <AdditionalOptions> -Wl,-rpath='$ORIGIN' %(AdditionalOptions)</AdditionalOptions>
    </Link>
    <PostBuildEvent>
      <Command>copy $(TargetDir)ijjs-cli.out $(TargetDir)ijjs-cli
del $(TargetDir)ijjs-cli.out
copy $(TargetDir)redis.out $(TargetDir)redis
del $(TargetDir)redis.out
copy $(TargetDir)libijjs.so ..\install\packages\org.ifw.ijjs\data\libijjs.so
copy $(TargetDir)libsigar.so ..\install\packages\org.ifw.ijjs\data\libsigar.so
copy $(TargetDir)libpostgre.so ..\install\packages\org.ifw.ijjs\data\libpostgre.so
copy $(TargetDir)libredis.so ..\install\packages\org.ifw.ijjs\data\libredis.so
copy $(TargetDir)ijjs-cli ..\install\packages\org.ifw.ijjs\data\ijjs-cli
copy $(TargetDir)redis ..\install\packages\org.ifw.ijjs\data\redis
copy ..\lib.ijdom.d.ts ..\install\packages\org.ifw.ijjs\data\lib.ijdom.d.ts
copy ..\lib.ijjs.d.ts ..\install\packages\org.ifw.ijjs\data\lib.ijjs.d.ts
copy ..\modules\postgresql\libpostgre.d.ts ..\install\packages\org.ifw.ijjs\data\libpostgre.d.ts
copy ..\modules\sigar\libsigar.d.ts ..\install\packages\org.ifw.ijjs\data\libsigar.d.ts
copy ..\modules\redis\libredis.d.ts ..\install\packages\org.ifw.ijjs\data\libredis.d.ts
copy ..\modules\cron\cron.js ..\install\packages\org.ifw.ijjs\data\cron.js
copy ..\modules\cron\cron.d.ts ..\install\packages\org.ifw.ijjs\data\cron.d.ts</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x86'">
    <ClCompile>
      <AdditionalIncludeDirectories>/root/projects/libijjs-linux/code/externals/wasm;/root/projects/libijjs-linux/code/externals/quickjs;/root/projects/libijjs-linux/code/externals/curl;/root/projects/libijjs-linux/code/externals;/root/projects/libijjs-linux/code/externals/jemalloc/include;/root/projects/libijjs-linux/code/externals/uv/include;/root/projects/libijjs-linux/code/externals/uv/src;/root/projects/libijjs-linux/code;/root/projects/libijjs-linux/code/headers;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <CLanguageStandard>gnu11</CLanguageStandard>
      <AdditionalOptions>-Wno-unused-parameter -Wno-incompatible-pointer-types -Wno-pointer-sign -Wno-int-conversion -Wno-unused-const-variable -Wno-unused-function -Wno-unused-variable -Wno-deprecated-declarations -Wno-ignored-attributes -Wno-missing-braces -Wno-comment -Wno-unused-value -Wno-format -Wno-expansion-to-defined -Wno-sign-conversion -Wno-conversion -Wno-int-to-pointer-cast -Wno-misleading-indentation %(AdditionalOptions)</AdditionalOptions>
      <PreprocessorDefinitions>HAVE_CURL_CONFIG_H;_LARGEFILE_SOURCE;_GNU_SOURCE;NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
    <Link>
      <AdditionalLibraryDirectories>/root/projects/libijjs-linux/bin/linux;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <LibraryDependencies>ijjs</LibraryDependencies>
      <SharedLibrarySearchPath>'$$ORIGIN';%(SharedLibrarySearchPath)</SharedLibrarySearchPath>
      <AdditionalOptions> -Wl,-rpath='$ORIGIN' %(AdditionalOptions)</AdditionalOptions>
    </Link>
    <PostBuildEvent>
      <Command>copy $(TargetDir)ijjs-cli.out $(TargetDir)ijjs-cli
del $(TargetDir)ijjs-cli.out
copy $(TargetDir)redis.out $(TargetDir)redis
del $(TargetDir)redis.out
copy $(TargetDir)libijjs.so ..\install\packages\org.ifw.ijjs\data\libijjs.so
copy $(TargetDir)libsigar.so ..\install\packages\org.ifw.ijjs\data\libsigar.so
copy $(TargetDir)libpostgre.so ..\install\packages\org.ifw.ijjs\data\libpostgre.so
copy $(TargetDir)libredis.so ..\install\packages\org.ifw.ijjs\data\libredis.so
copy $(TargetDir)ijjs-cli ..\install\packages\org.ifw.ijjs\data\ijjs-cli
copy $(TargetDir)redis ..\install\packages\org.ifw.ijjs\data\redis
copy ..\lib.ijdom.d.ts ..\install\packages\org.ifw.ijjs\data\lib.ijdom.d.ts
copy ..\lib.ijjs.d.ts ..\install\packages\org.ifw.ijjs\data\lib.ijjs.d.ts
copy ..\modules\postgresql\libpostgre.d.ts ..\install\packages\org.ifw.ijjs\data\libpostgre.d.ts
copy ..\modules\sigar\libsigar.d.ts ..\install\packages\org.ifw.ijjs\data\libsigar.d.ts
copy ..\modules\redis\libredis.d.ts ..\install\packages\org.ifw.ijjs\data\libredis.d.ts
copy ..\modules\cron\cron.js ..\install\packages\org.ifw.ijjs\data\cron.js
copy ..\modules\cron\cron.d.ts ..\install\packages\org.ifw.ijjs\data\cron.d.ts</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets" />
</Project>